<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

    <http auto-config="false" access-decision-manager-ref="accessDecisionManager" use-expressions="true">
        <!-- exclude static resources from security checks -->
        <intercept-url pattern="/resources/**" filters="none"/>

        <intercept-url pattern="/login" access="hasRole('ROLE_ANONYMOUS')" requires-channel="http"/>
        <intercept-url pattern="/logout" access="hasRole('ROLE_USER')" requires-channel="http"/>
        <intercept-url pattern="/**" access="hasRole('ROLE_ANONYMOUS')"/>
        <!--<intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>-->

        <!--
        <port-mappings>
            <port-mapping http="8080" https="8443"/>
        </port-mappings>
        -->

        <form-login login-page="/login" />

        <!--<openid-login login-page="/openidlogin" authentication-failure-url="/openidlogin?failed=1">-->
            <!--<attribute-exchange>-->
                <!--<openid-attribute name="email" type="http://schema.openid.net/contact/email" required="true" count="2" />-->
                <!--<openid-attribute name="name" type="http://schema.openid.net/namePerson/friendly" required="true" count="2" />-->

            <!--</attribute-exchange>-->
        <!--</openid-login>-->

        <logout logout-url="/logout" invalidate-session="true" logout-success-url="/"/>

        <session-management>
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="false"/>
        </session-management>
    </http>

    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="rozky" password="rozky" authorities="ROLE_USER, ROLE_ADMIN"/>
                <user name="http://openid-provider.appspot.com/" authorities="ROLE_USER"/>
            </user-service>
            <!--<jdbc-user-service data-source-ref="dataSource" authorities-by-username-query="select username,authority from users where username=?"/>-->
        </authentication-provider>

    </authentication-manager>

    <beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:property name="decisionVoters">
            <beans:list>
                <beans:bean class="org.springframework.security.web.access.expression.WebExpressionVoter">
                    <beans:property name="expressionHandler">
                        <beans:bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler">
                            <beans:property name="roleHierarchy" ref="roleHierarchy"/>
                        </beans:bean>
                    </beans:property>
                </beans:bean>
            </beans:list>
        </beans:property>
    </beans:bean>

    <beans:bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
        <beans:property name="hierarchy">
            <beans:value>
                ROLE_ADMIN > ROLE_USER
                ROLE_USER > ROLE_ANONYMOUS
            </beans:value>
        </beans:property>
    </beans:bean>

<!--    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userDetailsService">
            <password-encoder ref="passwordEncoder" />
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="userDetailsService" class="com.my.UserDetailsServiceImpl">
    </beans:bean>-->

    <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
        <beans:constructor-arg value="256"/>
        <beans:property name="encodeHashAsBase64" value="true"/>
    </beans:bean>
</beans:beans>

